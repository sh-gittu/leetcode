/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    vector<vector<int>> levelOrder(Node* root) {
        if (root == NULL)
            return {};
        
        vector<vector<int>> level;
        queue<Node*> q;

        q.push(root);
        while (!q.empty())
        {
            int sz = q.size();
            vector<int> l;

            for (int i = 0; i < sz; i++)
            {
                auto curr = q.front();
                q.pop();

                l.push_back(curr->val);
                
                for (auto it: curr->children)
                {
                    q.push(it);
                }
            }

            level.push_back(l);
        }

        return level;
    }
};
